# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: ${APP}
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: ${APP}
  maxHistory: 3
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
        pod:
          securityContext:
            runAsUser: ${APP_UID}
            runAsGroup: ${APP_GID}
            runAsNonRoot: true
            fsGroup: ${APP_GID}
            fsGroupChangePolicy: OnRootMismatch
        containers:
          main:
            image:
              repository: ghcr.io/linuxserver/radarr
              tag: version-5.28.0.10274
            env:
              TZ: "Europe/Budapest"
              PUID: ${APP_UID}
              PGID: ${APP_GID}
              RADARR__AUTH__APIKEY: "${RADARR_API_KEY}"
              RADARR__POSTGRES__HOST: "postgres.media.svc.cluster.local"
              RADARR__POSTGRES__USER: "${RADARR_USERNAME}"
              RADARR__POSTGRES__PASSWORD: "${RADARR_PASSWORD}"
              RADARR__POSTGRES__MAINDB: "${RADARR_DATABASE}-db"
              RADARR__POSTGRES__LOGDB: "${RADARR_DATABASE}-logs"
    service:
      main:
        type: LoadBalancer
        ports:
          http:
            port: 7878
            protocol: TCP
    route:
      internal:
        hostnames: ["${APP}.${SECRET_DOMAIN}"]
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs: [{}]
    persistence:
      config:
        type: persistentVolumeClaim
        existingClaim: radarr
        advancedMounts:
          main:
            main:
              - path: /config
                readOnly: false
      movies:
        type: persistentVolumeClaim
        existingClaim: movies
        advancedMounts:
          main:
            main:
              - path: /movies
                readOnly: false
      kids-movies:
        type: persistentVolumeClaim
        existingClaim: kids-movies
        advancedMounts:
          main:
            main:
              - path: /mnt/Gyerek/Filmek
                readOnly: false
      downloads:
        type: persistentVolumeClaim
        existingClaim: downloads
        advancedMounts:
          main:
            main:
              - path: /downloads
                readOnly: false
